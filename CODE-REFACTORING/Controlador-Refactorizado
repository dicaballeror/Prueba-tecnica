public function post_confirm() {
    define("ANDROID2_CONFIG", 'default');
    define("EMPTY", '');
    define("ERROR", 'error');
    define("ERROR0", '0');
    define("ERROR1", '1');
    define("ERROR2", '2');
    define("ERROR3", '3');
    define("GET_DRIVER_ID", 'driver_id');
    define("IOS_CONFIG", 'honk.wav');
    define("IPHONE", '1');
    define("OPEN", 'Open');
    define("PUSH_MESSAGE", 'Tu servicio ha sido confirmado!');
    define("STATUS1", '1');
    define("STATUS2", '2');
    define("STR_SERVICE_ID", 'serviceId');
    define("UNAVAILABLE", '0');
    define("UPDATE_AVAILABLE", 'available');
    define("UPDATE_CAR_ID", 'car_id');
    define("UPDATE_DRIVER_ID", 'driver_id');
    define("UPDATE_STATUS_ID", 'status_id');
    $id = Input::get('service_id');
    $service = Service::find($id);
    if ($service != NULL) {
        if ($service->status_id == '6') {
            return Response::json(array(ERROR => ERROR2));
        }
        if ($service->driver_id == NULL && $service->status_id == STATUS1) {
            $service = Service::update($id, array(
                          UPDATE_DRIVER_ID => Input::get(GET_DRIVER_ID),
                          UPDATE_STATUS_ID => STATUS2
            ));
            Driver::update(Input::get(GET_DRIVER_ID), array(
                UPDATE_AVAILABLE => 
            ));
            $driverTmp = Driver::find(Input::get(GET_DRIVER_ID));
            Service::update($id, array(
                UPDATE_CAR_ID => $driverTmp->car_id
            ));
            $service = Service::find($id);
            $push = Push::make();
            if ($service->user->uuid == EMPTY) {
                return Response::json(array(ERROR => ERROR0));
            }
            if ($service->user->type == IPHONE) {
                $result = $push->ios($service->user->uuid, PUSH_MESSAGE, 1, IOS_CONFIG, OPEN, array(STR_SERVICE_ID => $service->id));
            } else {
                $result = $push->android2($service->user->uuid, PUSH_MESSAGE, 1, ANDROID2_CONFIG, OPEN, array(STR_SERVICE_ID => $service->id));
            }
            return Response::json(array(ERROR => ERROR0));
        } else {
            return Response::json(array(ERROR => ERROR1));
        }
    } else {
        return Response::json(array(ERROR => ERROR3));
    }
}
